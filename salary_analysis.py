from telethon import TelegramClient
import pandas as pd
import re
import requests
from datetime import datetime

# üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
api_id = 27488438
api_hash = '9d32823e417a75e3b75ad6f64d34f886'
channel_username = 'salary_pm'  # –±–µ–∑ @

client = TelegramClient('session_salary_pm', api_id, api_hash)

# üí± –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –¶–ë –†–§
def get_cbr_currency_rate(currency):
    today = datetime.now().strftime('%d/%m/%Y')
    url = f"https://www.cbr.ru/scripts/XML_daily.asp?date_req={today}"
    response = requests.get(url)
    if response.status_code != 200:
        return None
    pattern = r'<CharCode>' + currency + r'</CharCode>.*?<Value>([\d,]+)</Value>'
    match = re.search(pattern, response.text, re.DOTALL)
    if match:
        rate = float(match.group(1).replace(',', '.'))
        return rate
    else:
        return None

async def main():
    await client.start()
    all_posts = []

    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∑–∞—Ä–∞–Ω–µ–µ
    eur_rate = get_cbr_currency_rate('EUR')
    usd_rate = get_cbr_currency_rate('USD')

    async for message in client.iter_messages(channel_username, reverse=True):
        if not message.text:
            continue
        text = message.text

        # –ì—Ä–µ–π–¥, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –∫–æ–º–ø–∞–Ω–∏—è
        header_match = re.search(r'‚ö°Ô∏è\s*(\w+)\s+([A-Za-z–ê-–Ø–∞-—è–Å—ë\s]+?)\s+–≤\s+([A-Za-zA-–Ø–∞-—è–Å—ë\s]+)', text)
        grade = header_match.group(1).strip() if header_match else '–ù–µ —É–∫–∞–∑–∞–Ω'
        position = header_match.group(2).strip() if header_match else '–ù–µ —É–∫–∞–∑–∞–Ω'
        company = header_match.group(3).strip() if header_match else '–ù–µ —É–∫–∞–∑–∞–Ω'

        # –ó–∞—Ä–ø–ª–∞—Ç–∞
        salary_match = re.search(r'–ó–∞—Ä–ø–ª–∞—Ç–∞:\s*([\d\s]+)\s*(‚Ç¨|\$|‚ÇΩ)?', text)
        salary_rub = '–ù–µ —É–∫–∞–∑–∞–Ω'
        salary_base = None
        currency = None
        if salary_match:
            salary_str = salary_match.group(1).replace(' ', '').strip()
            currency = salary_match.group(2)
            if salary_str != '':
                salary_amount = int(salary_str)
                salary_base = salary_amount
                if currency == '‚Ç¨' and eur_rate:
                    salary_rub = round(salary_amount * eur_rate / 1000) * 1000
                elif currency == '$' and usd_rate:
                    salary_rub = round(salary_amount * usd_rate / 1000) * 1000
                else:
                    salary_rub = salary_amount

        # –ü—Ä–µ–º–∏—è
        premia_match = re.search(r'–ü—Ä–µ–º–∏—è:\s*(.+?)(\||\n)', text)
        premia_freq = '–ù–µ —É–∫–∞–∑–∞–Ω'
        premia_sum = '–ù–µ —É–∫–∞–∑–∞–Ω'
        if premia_match:
            premia_freq = premia_match.group(1).strip().capitalize()
            premia_sum_match = re.search(r'\|\s*([^\n]+)', text)
            if premia_sum_match:
                premia_text = premia_sum_match.group(1).strip()
                percent_match = re.search(r'(\d+)% –æ—Ç –∑–ø', premia_text)
                if percent_match and salary_base:
                    premia_value = int(percent_match.group(1)) * salary_base / 100
                    premia_sum = round(premia_value * (eur_rate if currency == '‚Ç¨' else usd_rate if currency == '$' else 1) / 1000) * 1000
                else:
                    premia_sum_val = re.search(r'([\d\s]+)\s*(‚Ç¨|\$|‚ÇΩ)?', premia_text)
                    if premia_sum_val:
                        premia_str = premia_sum_val.group(1).replace(' ', '').strip()
                        if premia_str != '':
                            premia_amount = int(premia_str)
                            premia_currency = premia_sum_val.group(2)
                            if premia_currency == '‚Ç¨' and eur_rate:
                                premia_sum = round(premia_amount * eur_rate / 1000) * 1000
                            elif premia_currency == '$' and usd_rate:
                                premia_sum = round(premia_amount * usd_rate / 1000) * 1000
                            else:
                                premia_sum = premia_amount
                        else:
                            premia_sum = '–ù–µ —É–∫–∞–∑–∞–Ω'
                    else:
                        premia_sum = '–ù–µ —É–∫–∞–∑–∞–Ω'

        # –û–ø—ã—Ç
        exp_match = re.search(r'–û–ø—ã—Ç:\s*(.+)', text)
        exp_sfera = '–ù–µ —É–∫–∞–∑–∞–Ω'
        exp_company = '–ù–µ —É–∫–∞–∑–∞–Ω'
        if exp_match:
            exp_text = exp_match.group(1)
            sfera_match = re.search(r'(\d+)\s+–ª–µ—Ç –≤ —Å—Ñ–µ—Ä–µ', exp_text)
            company_match = re.search(r'(\d+)\s+–ª–µ—Ç –≤ –∫–æ–º–ø–∞–Ω–∏–∏', exp_text)
            month_sfera_match = re.search(r'(\d+)\s+–º–µ—Å', exp_text)
            if sfera_match:
                exp_sfera = sfera_match.group(1)
            elif month_sfera_match:
                exp_sfera = '–ú–µ–Ω–µ–µ 1 –≥–æ–¥–∞'
            if company_match:
                exp_company = company_match.group(1)

        # –ë–æ–Ω—É—Å—ã
        bonuses_match = re.search(r'–ë–æ–Ω—É—Å—ã:\s*(.+?)(–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã|–ß—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è|–ß—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è|\Z)', text, re.DOTALL)
        bonuses = bonuses_match.group(1).strip().replace('\n', ', ') if bonuses_match else '–ù–µ —É–∫–∞–∑–∞–Ω'

        # –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã, –æ—Ç–∫—É–¥–∞, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        format_match = re.search(r'–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã:\s*(.+?)\s*\((.+?)\)\s*\|\s*(\d+)[-‚Äì](\d+)', text)
        format_work = format_match.group(1).strip() if format_match else '–ù–µ —É–∫–∞–∑–∞–Ω'
        where_work = format_match.group(2).strip().capitalize() if format_match else '–ù–µ —É–∫–∞–∑–∞–Ω'
        duration = format_match.group(4).strip() if format_match else '–ù–µ —É–∫–∞–∑–∞–Ω'

        # –ß—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è
        like_match = re.search(r'–ß—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏\?\s*(.+?)(–ß—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è|\Z)', text, re.DOTALL)
        like = like_match.group(1).strip().replace('\n', ' ') if like_match else '–ù–µ —É–∫–∞–∑–∞–Ω'

        # –ß—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è
        dislike_match = re.search(r'–ß—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è\?\s*(.+?)(–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π|\[|#|\Z)', text, re.DOTALL)
        dislike = dislike_match.group(1).strip().replace('\n', ' ') if dislike_match else '–ù–µ —É–∫–∞–∑–∞–Ω'

        # –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        date_published = message.date.strftime('%d.%m.%Y')

        # –°—Å—ã–ª–∫–∞
        link = f"https://t.me/{channel_username}/{message.id}"

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É
        all_posts.append({
            '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏': company,
            '–î–æ–ª–∂–Ω–æ—Å—Ç—å': position,
            '–ì—Ä–µ–π–¥': grade,
            '–ó–∞—Ä–ø–ª–∞—Ç–∞ (–≤ —Ä—É–±)': salary_rub,
            '–ü—Ä–µ–º–∏—è (—á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å)': premia_freq,
            '–ü—Ä–µ–º–∏—è (—Å—É–º–º–∞)': premia_sum,
            '–û–ø—ã—Ç (–≤ —Å—Ñ–µ—Ä–µ)': exp_sfera,
            '–û–ø—ã—Ç (–≤ –∫–æ–º–ø–∞–Ω–∏–∏)': exp_company,
            '–ë–æ–Ω—É—Å—ã': bonuses,
            '–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã': format_work,
            '–û—Ç–∫—É–¥–∞ –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å': where_work,
            '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è': duration,
            '–ß—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è': like,
            '–ß—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è': dislike,
            '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏': date_published,
            '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é': link
        })

    # –≠–∫—Å–ø–æ—Ä—Ç
    df = pd.DataFrame(all_posts)
    df.to_excel('Salary_Analysis_All.xlsx', index=False)
    print("‚úÖ –ì–æ—Ç–æ–≤–æ. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Salary_Analysis_All.xlsx")

with client:
    client.loop.run_until_complete(main())
